{"kind":"FETCH","data":{"headers":{"access-control-allow-origin":"*","alt-svc":"h3=\":443\"; ma=86400","cf-ray":"850313abcaa03513-ICN","connection":"keep-alive","content-encoding":"br","content-type":"application/json; charset=UTF-8","date":"Sun, 04 Feb 2024 12:56:59 GMT","nel":"{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}","report-to":"{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=UipfOaFbxB%2FCos%2BCWW10Ks59asTo9uoVf%2B5CytefYWQFl1UnRroM79g3G80NFe4lIRCOyvmGfotz1fiqAPRLQFcuvLzyJYWrvFEgNafa68Zh5LqXLcOyUJSRunlMHxxP38W1H9cmWNRRayZOx7S8xSfKI81xMHc%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}","server":"cloudflare","transfer-encoding":"chunked","vary":"Accept-Encoding"},"body":"","status":200,"url":"https://nomad-movies.nomadcoders.workers.dev/movies"},"revalidate":31536000,"tags":[]}